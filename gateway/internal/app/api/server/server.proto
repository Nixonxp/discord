syntax = "proto3";

package github.com.Nixonxp.discord.server.api.v1;
import "google/protobuf/timestamp.proto";
option go_package = "api/server";

service ServerService {
  rpc CreateServer(CreateServerRequest) returns (CreateServerResponse) {}
  rpc SearchServer(SearchServerRequest) returns (SearchServerResponse) {}
  rpc SubscribeServer(SubscribeServerRequest) returns (ActionResponse) {}
  rpc UnsubscribeServer(UnsubscribeServerRequest) returns (ActionResponse){}
  rpc SearchServerByUserId(SearchServerByUserIdRequest) returns (SearchServerByUserIdResponse) {}
  rpc InviteUserToServer(InviteUserToServerRequest) returns (ActionResponse) {}
  rpc PublishMessageOnServer(PublishMessageOnServerRequest) returns (ActionResponse) {}
  rpc GetMessagesFromServer(GetMessagesFromServerRequest) returns (GetMessagesFromServerResponse) {}
}

message CreateServerRequest {
  string name = 1;
}

message CreateServerResponse {
  uint64 id = 1;
  string name = 2;
}

message SearchServerRequest {
  uint64 id = 1;
  string name = 2;
}

message SearchServerResponse {
  uint64 id = 1;
  string name = 2;
}

message ErrorMessage {
  string message = 1;
}

message ActionResponse {
  bool success = 1;
}

message SubscribeServerRequest {
  uint64 server_id = 1;
}

message UnsubscribeServerRequest {
  uint64 server_id = 1;
}

message SearchServerByUserIdRequest {
  uint64 user_id = 1;
}

message SearchServerByUserIdResponse {
  uint64 id = 1;
  string name = 2;
}

message InviteUserToServerRequest {
  uint64 user_id = 1;
  uint64 server_id = 2;
}

message PublishMessageOnServerRequest {
  uint64 server_id = 1;
  string text = 2;
}

message GetMessagesFromServerRequest {
  uint64 server_id = 1;
}

message GetMessagesFromServerResponse {
  repeated Message messages = 1;
}

message Message {
  string id = 1;
  string text = 2;
  google.protobuf.Timestamp timestamp = 3;
  string chat_id = 4;
  string owner_id = 5;
}