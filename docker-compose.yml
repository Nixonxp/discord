version: "3.7"

services:
  gateway:
    build:
      context: ./gateway
      dockerfile: ./build/Dockerfile
    environment:
      JAEGER_HOST: "jaeger:6831"
      JAEGER_AGENT_HOST: jaeger
      JAEGER_AGENT_PORT: 6831
    ports:
      - "8800:8080"
      - "8801:8081"
    networks:
      - tracing
      - user
      - auth

  auth:
    build:
      context: ./auth
      dockerfile: ./build/Dockerfile
    environment:
      JAEGER_HOST: "jaeger:6831"
      JAEGER_AGENT_HOST: jaeger
      JAEGER_AGENT_PORT: 6831
    networks:
      - tracing
      - user

  user:
    build:
      context: ./user
      dockerfile: ./build/Dockerfile
    environment:
      JAEGER_HOST: "jaeger:6831"
      JAEGER_AGENT_HOST: jaeger
      JAEGER_AGENT_PORT: 6831
    depends_on:
      - postgres
    networks:
      - tracing
      - postgresql
      - user

  server:
    build:
      context: ./server
      dockerfile: ./build/Dockerfile
    environment:
      MONGO_DB: "discord"
      MONGO_HOST: "mongodb"
      MONGO_PORT: 27017
      MONGO_USER: "discord"
      MONGO_PASSWORD: "example"
    networks:
      - mongodb
      - tracing

  channel:
    build:
      context: ./channel
      dockerfile: ./build/Dockerfile

  chat:
    build:
      context: ./chat
      dockerfile: ./build/Dockerfile

  mongodb:
    image: mongo:7.0.5
    restart: unless-stopped
    #env_file: ./chat/.env
    volumes:
      - mongo-volume:/data/db1
    ports:
      - 27117:27017
    environment:
      - PUID=1000
      - PGID=1000
      - MONGO_INITDB_ROOT_USERNAME=discord
      - MONGO_INITDB_ROOT_PASSWORD=example
      - MONGO_INITDB_DATABASE=discord
    networks:
      - mongodb

  postgres:
    container_name: postgres_discord
    image: postgres:14.8-alpine3.18
    environment:
      POSTGRES_DB: "discord"
      POSTGRES_USER: "admin"
      POSTGRES_PASSWORD: "password123"
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - postgresql

  jaeger:
    image: jaegertracing/all-in-one:1.48
    container_name: jaeger
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp" # jaeger-client
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686" # web
      - "14268:14268"
      - "9411:9411"
    networks:
      - tracing

volumes:
  postgres:
  mongo-volume:
  cache:
    driver: local

networks:
  tracing:
    driver: bridge
  postgresql:
    driver: bridge
  user:
    driver: bridge
  auth:
    driver: bridge
  mongodb:
    driver: bridge