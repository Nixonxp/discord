syntax = "proto3";

package github.com.Nixonxp.discord.user.api.v1;
option go_package = "github.com/Nixonxp/discord/user/pkg/api/v1;user";

service UserService {
  rpc CreateUser(CreateUserRequest) returns (UserDataResponse) {}
  rpc GetUserByLoginAndPassword(GetUserByLoginAndPasswordRequest) returns (UserDataResponse) {}

  rpc UpdateUser(UpdateUserRequest) returns (UserDataResponse) {}
  rpc GetUserByLogin(GetUserByLoginRequest) returns (UserDataResponse) {}
  rpc GetUserFriends(GetUserFriendsRequest) returns (GetUserFriendsResponse) {}
  rpc AddToFriendByUserId(AddToFriendByUserIdRequest) returns (ActionResponse) {}
  rpc AcceptFriendInvite(AcceptFriendInviteRequest) returns (ActionResponse) {}
  rpc DeclineFriendInvite(DeclineFriendInviteRequest) returns (ActionResponse) {}
}

message CreateUserRequest {
  string login = 1;
  string name = 2;
  string email = 3;
  string password = 4;
}

message UpdateUserRequest {
  string id = 1;
  string login = 2;
  string name = 3;
  string email = 4;
  string password = 5;
  string avatar_photo_url = 6;
}

message UserDataResponse {
  string id = 1;
  string login = 2;
  string name = 3;
  string email = 4;
  string avatar_photo_url = 6;
}

message GetUserByLoginRequest {
  string login = 1;
}

message GetUserByLoginAndPasswordRequest {
  string login = 1;
  string password = 2;
}

message ErrorMessage {
  string message = 1;
}

message GetUserFriendsRequest {
}

message GetUserFriendsResponse {
  repeated Friend friends = 1;
}

message Friend {
  string userId = 1;
  string login = 2;
  string name = 3;
  string email = 4;
}

message AddToFriendByUserIdRequest {
  uint64 user_id = 1;
}

message AcceptFriendInviteRequest {
  uint64 invite_id = 1;
}

message DeclineFriendInviteRequest {
  uint64 invite_id = 1;
}

message ActionResponse {
  bool success = 1;
}
